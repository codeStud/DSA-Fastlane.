// Given a signed 32-bit integer x, return x with its digits reversed. If reversing x causes the value to go outside the signed 32-bit integer range [-231, 231 - 1], then return 0.

// Assume the environment does not allow you to store 64-bit integers (signed or unsigned).

// Input: x = 123
// Output: 321

// Input: x = -123
// Output: -321

class Solution {
public:
    int reverse(int x) {
        // x = 123 &  res = 0
        // res = (res * 10) + (x % 10) & x = x/10
        // res = (0*10) + (123 % 10) = 3 & x = 123/10 = 12
        // res = 3*10 + (12 % 10) = 32 & x = 12/10 = 1
        // res = 32*10 + (1 % 10) = 321 & x = 1/10 = 0 =>STOP
        long int res = 0;
        while(x){
            res = res*10 + (x % 10);
            x = x / 10;
        }
        
        return (res < INT_MIN || res > INT_MAX) ? 0 : res;
    }
};
