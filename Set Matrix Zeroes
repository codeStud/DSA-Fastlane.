// Given an m x n matrix. If an element is 0, set its entire row and column to 0. 

// Do it IN-PLACE.

// Input: matrix = [[1,1,1],[1,0,1],[1,1,1]]
// Output: [[1,0,1],[0,0,0],[1,0,1]]

// Input: matrix = [[0,1,2,0],[3,4,5,2],[1,3,1,5]]
// Output: [[0,0,0,0],[0,4,5,0],[0,3,1,0]]

 // ``````APPROACH```````
        // if cell[i][j] == 0 {
        //     cell[i][0] = 0
        //     cell[0][j] = 0
        // }
        
        // Also, since the first row and first column has same cell representator cell[0][0]
        // we need one separate variable to check if the first column has to be made 0 or just the first row.
        // eg - [[0,1,2,0],
        //       [3,4,5,2],
        //       [1,3,1,5]] here, first column also needs to be made zero along with the first row.
        
        // eg2- [[1,1,2,0], 
        //       [3,4,5,2],     here first row and 3rd column has to be made 0. 
        //       [1,3,1,5]] 
        
        // So, if you put 0 in cell[0][0] in eg 2 case, you need a separate variable to identify that 
        // first column should not be made 0
        
        // similarly for the row as well

class Solution {
public:
    void setZeroes(vector<vector<int>>& matrix) {
               
        bool isZeroCol = false;
        bool isZeroRow = false;
        for (int i = 0; i < matrix.size(); i++) { //check the first column
            if (matrix[i][0] == 0) {
                isZeroCol = true;
                break;
            } 
        }
        for (int i = 0; i < matrix[0].size(); i++) { //check the first row
            if (matrix[0][i] == 0) {
                isZeroRow = true;
                break;
            } 
        }
        for (int i = 1; i < matrix.size(); i++) { //check except the first row and column
            for (int j = 1; j < matrix[0].size(); j++) 
                if (matrix[i][j] == 0) {
                    matrix[i][0] = 0;
                    matrix[0][j] = 0;
                }
        }
        for (int i = 1; i < matrix.size(); i++) { //process except the first row and column
           for (int j = 1; j < matrix[0].size(); j++) 
               if (matrix[i][0] == 0 || matrix[0][j] == 0)
                   matrix[i][j] = 0;
        }
        if (isZeroCol) { //handle the first column
            for (int i = 0; i < matrix.size(); i++) 
                matrix[i][0] = 0;
        }
        if (isZeroRow) { //handle the first row
            for (int i = 0; i < matrix[0].size(); i++) 
                matrix[0][i] = 0;
        }
    }
};
